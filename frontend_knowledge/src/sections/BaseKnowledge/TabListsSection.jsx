import React from 'react';
import {LoadMoreTabListsButton} from './LoadMoreTabListsButton';
import {ArrowIcon} from './ArrowIcon';

const TabListsSection = React.memo(({
  savedTabLists,
  viewTabList,
  activeTabList,
  tabsName,
  loadingTabLists,
  hasMoreTabLists,
  isLoadingMoreTabLists,
  tabListsTotal,
  activeTabsCount,
  
  onToggleViewTabList,
  onSaveTabs,
  onShowTabsName,
  onStartEditingTabList,
  onDeleteSavedTabList,
  onOpenSavedTabList,
  onLoadMoreTabLists
}) => {
  return (
    <>
      <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>   
        <h3>üìö C–ø–∏—Å–∫–∏ –∑–Ω–∞–Ω–∏–π</h3>
        
        {/* –ö–ù–û–ü–ö–ê –°–û–•–†–ê–ù–ï–ù–ò–Ø –¢–ï–ö–£–©–ò–• –í–ö–õ–ê–î–û–ö */}        
        {activeTabsCount > 0 && (
          <div>
            <button 
              className="save-button"
              onClick={onSaveTabs}
            >
              –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç–∫—Ä—ã—Ç—ã–µ –≤–∫–ª–∞–¥–∫–∏ ({activeTabsCount})
            </button>
          </div>
        )}

        <button className="toolbar-button" onClick={onToggleViewTabList}>
          {viewTabList ? '–°–≤–µ—Ä–Ω—É—Ç—å ü¢Å' : '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å ü¢É'}
        </button>
      </div>
        
        {/* –°–ü–ò–°–û–ö –°–û–•–†–ê–ù–ï–ù–ù–´–• –í–ö–õ–ê–î–û–ö */}
      {viewTabList && (
        <div className="saved-tab-lists-section">
          {loadingTabLists ? (
            <div className="loading-tab-lists">–ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–æ–≤...</div>
          ) : (
            <>
              {savedTabLists.map(tabList => (
                <div 
                  key={tabList.id} 
                  className={`saved-tab-list-item ${activeTabList === tabList.id ? 'active' : ''}`}
                >
                  <div className="tab-list-header">
                    <div className="tab-list-title">
                      <strong>{tabList.name}</strong>
                      {activeTabList === tabList.id && (
                        <>
                          <span className="active-badge">‚óè –û—Ç–∫—Ä—ã—Ç</span>
                          <br/>
                          
                          <button 
                            className="toggle-button" 
                            onClick={(event) => onShowTabsName(tabList.id, event)}
                          >
                            –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ<ArrowIcon isOpen={tabList.viewListTab} />
                          </button>
                          {tabList.viewListTab && (
                            <>
                              {tabsName.map((item, index) => (
                                <div key={index}>- {item}</div>
                              ))}
                            </>
                          )}
                        </>
                      )}
                    </div>
                    <div className="tab-list-actions">
                      <button 
                        className="edit-tab-list-btn"
                        onClick={(e) => onStartEditingTabList(tabList, e)}
                        title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
                      >
                        ‚úèÔ∏è
                      </button>
                      <button 
                        className="delete-tab-list-btn"
                        onClick={(e) => onDeleteSavedTabList(tabList.id, e)}
                        title="–£–¥–∞–ª–∏—Ç—å —Å–ø–∏—Å–æ–∫"
                      >
                        √ó
                      </button>
                    </div>
                  </div>
                  
                  {tabList.description && (
                    <div className="tab-list-desc">{tabList.description}</div>
                  )}

                  <div className="tab-list-info">
                    <span>üïí {new Date(tabList.created_at).toLocaleDateString('ru-RU')}</span>
                  </div>

                  <button onClick={() => onOpenSavedTabList(tabList.id)}>
                    –û—Ç–∫—Ä—ã—Ç—å
                  </button>
                </div>
              ))}
              
                {/* –ö–ù–û–ü–ö–ê "–ó–ê–ì–†–£–ó–ò–¢–¨ –î–ê–õ–¨–®–ï" –î–õ–Ø –°–ü–ò–°–ö–û–í –í–ö–õ–ê–î–û–ö */}
              <LoadMoreTabListsButton
                onClick={onLoadMoreTabLists}
                hasMore={hasMoreTabLists}
                isLoading={isLoadingMoreTabLists}
                loadedCount={savedTabLists.length}
                total={tabListsTotal}
              />
              
              {savedTabLists.length === 0 && (
                <div className="no-tab-lists">
                  <p>–ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤ –∑–Ω–∞–Ω–∏–π</p>
                  <small>–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –∑–Ω–∞–Ω–∏—è, —á—Ç–æ–±—ã –±—ã—Å—Ç—Ä–æ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è –∫ –Ω–∏–º</small>
                </div>
              )}
            </>
          )}
        </div>
      )}
    </>
  );
});

export { TabListsSection };